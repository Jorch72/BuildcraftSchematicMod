buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // the repo from which to get NEI and stuff
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name "DVS1 Maven FS'"
        url 'http://dvs1.progwml6.com/files/maven'
    }
}

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "1.7.10-0.2.2"
group= "com.werlsoft.bsm" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "bsm"

minecraft {
    version = "1.7.10-10.13.1.1229"
    runDir = "eclipse"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    compile "mantle:Mantle:${config.mc_version}-${config.mantle_version}:deobf"
    compile "tconstruct:TConstruct:${config.mc_version}-${config.tcon_version}:deobf"
    compile "codechicken:CodeChickenLib:${config.mc_version}-${config.ccl_version}:dev"
    compile "codechicken:ForgeMultipart:${config.mc_version}-${config.fmp_version}:dev"
    compile "mcp.mobius.waila:Waila:1.5.6_dev1_1.7.10"
    compile "com.mod-buildcraft:buildcraft:${config.bc_version}:dev"

}

task copyChicken(type: Copy, dependsOn: "extractUserDev") {
    from { configurations.compile }
    include "**/*Chicken*.jar", "**/*NotEnoughItems*.jar"
    exclude "**/CodeChickenLib*" // because CCC downloads it anyways.. -_-
    into file("./eclipse/mods") // paralell to the assets dir
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}
tasks.setupDevWorkspace.dependsOn copyChicken
tasks.setupDecompWorkspace.dependsOn copyChicken

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
